{"ast":null,"code":"var _jsxFileName = \"/Users/tracy/Desktop/JavaScript/school/frameworks/restaurant_reservation/front/src/components/ReservationFlow/TableSelection.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableSelection = ({\n  date,\n  timeSlot,\n  onNext,\n  onPrevious\n}) => {\n  _s();\n  const [guests, setGuests] = useState(0); // State for the number of guests\n  const [tables, setTables] = useState([]);\n  const [selectedTable, setSelectedTable] = useState('');\n  const [step, setStep] = useState(1); // To manage the input and table selection steps\n\n  useEffect(() => {\n    if (guests > 0) {\n      axios.get(`/reservations/available-tables?date=${date}&timeSlot=${timeSlot}&guests=${guests}`).then(response => setTables(response.data)).catch(error => console.log(error));\n    }\n  }, [date, timeSlot, guests]);\n  const handleGuestSubmit = () => {\n    if (guests && guests > 0) {\n      setStep(2); // Proceed to the table selection step\n    } else {\n      alert(\"Please enter a valid number of guests.\");\n    }\n  };\n  const handleTableSelect = table => {\n    setSelectedTable(table);\n  };\n  const handleNext = () => {\n    onNext({\n      guests,\n      table: selectedTable\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Enter Number of Guests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: guests || '',\n        onChange: e => setGuests(parseInt(e.target.value)),\n        placeholder: \"Number of guests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGuestSubmit,\n        children: \"NEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Select a Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: tables.length > 0 ? tables.map(table => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTableSelect(table._id),\n          className: selectedTable === table._id ? 'selected' : '',\n          children: [\"Table \", table.tableNumber, \" - Seats \", table.seats]\n        }, table.tableNumber, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 37\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No tables available for the selected number of guests.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setStep(1),\n        children: \"PREVIOUS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNext,\n        disabled: !selectedTable,\n        children: \"NEXT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(TableSelection, \"YJ9v50jmwT0yPQCd4Ie2YqNbWDE=\");\n_c = TableSelection;\nexport default TableSelection;\n{/* <div>\n    <h1>Select a Table</h1>\n        <div>\n            {\n                tables.map(table => (\n                    <button key={table.tableNumber} onClick={() => handleTableSelect(table._id)}>\n                        Table {table.tableNumber} - Seats {table.seats}\n                    </button>\n                ))\n            }\n        </div>\n        <button onClick={onPrevious}>PREVIOUS</button>\n        <button onClick={handleNext} disabled={!selectedTable}>NEXT</button>\n </div> */}\nvar _c;\n$RefreshReg$(_c, \"TableSelection\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","TableSelection","date","timeSlot","onNext","onPrevious","_s","guests","setGuests","tables","setTables","selectedTable","setSelectedTable","step","setStep","get","then","response","data","catch","error","console","log","handleGuestSubmit","alert","handleTableSelect","table","handleNext","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","parseInt","target","placeholder","onClick","length","map","_id","className","tableNumber","seats","disabled","_c","$RefreshReg$"],"sources":["/Users/tracy/Desktop/JavaScript/school/frameworks/restaurant_reservation/front/src/components/ReservationFlow/TableSelection.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst TableSelection = ({ date, timeSlot, onNext, onPrevious }) => {\n    const [guests, setGuests] = useState(0); // State for the number of guests\n    const [tables, setTables] = useState([]);\n    const [selectedTable, setSelectedTable] = useState('');\n    const [step, setStep] = useState(1); // To manage the input and table selection steps\n\n    useEffect(() => {\n        if (guests > 0) {\n            axios\n                .get(`/reservations/available-tables?date=${date}&timeSlot=${timeSlot}&guests=${guests}`)\n                .then(response => setTables(response.data))\n                .catch(error => console.log(error));\n        }\n    }, [date, timeSlot, guests]);\n\n    const handleGuestSubmit = () => {\n        if(guests && guests > 0){\n            setStep(2); // Proceed to the table selection step\n        }else{\n            alert(\"Please enter a valid number of guests.\");\n        }\n    }\n\n    const handleTableSelect = (table) => {\n        setSelectedTable(table);\n    }\n\n    const handleNext = () => {\n        onNext({ guests, table: selectedTable });\n    }\n\n    return(\n        <div>\n            {step === 1 && (\n                <div>\n                    <h1>Enter Number of Guests</h1>\n                    <input \n                        type='number'\n                        value={guests || ''}\n                        onChange={(e) => setGuests(parseInt(e.target.value))}\n                        placeholder='Number of guests'\n                    />\n                    <button onClick={handleGuestSubmit}>NEXT</button>\n                </div>\n            )}\n            {step === 2 && (\n                <div>\n                    <h1>Select a Table</h1>\n                    <div>\n                        {\n                            tables.length > 0 ? (\n                                tables.map(table => (\n                                    <button\n                                        key={table.tableNumber}\n                                        onClick={() => handleTableSelect(table._id)}\n                                        className={selectedTable === table._id ? 'selected' : ''}\n                                    >\n                                        Table {table.tableNumber} - Seats {table.seats}\n                                    </button>\n                                ))\n                            ) : (<p>No tables available for the selected number of guests.</p>)\n                        }\n                    </div>\n                    <button onClick={() => setStep(1)}>PREVIOUS</button>\n                    <button onClick={handleNext} disabled={!selectedTable}>NEXT</button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default TableSelection;\n\n{/* <div>\n    <h1>Select a Table</h1>\n        <div>\n            {\n                tables.map(table => (\n                    <button key={table.tableNumber} onClick={() => handleTableSelect(table._id)}>\n                        Table {table.tableNumber} - Seats {table.seats}\n                    </button>\n                ))\n            }\n        </div>\n        <button onClick={onPrevious}>PREVIOUS</button>\n        <button onClick={handleNext} disabled={!selectedTable}>NEXT</button>\n</div> */}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}